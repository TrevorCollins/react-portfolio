{"ast":null,"code":"var _jsxFileName = \"/Users/trevorcollins/Desktop/react-portfolio/src/components/Contact/index.js\";\nimport React, { Component } from \"react\";\nimport Nav from \"../Nav\"; // class Contact extends Component {\n//     render() {\n//         const divStyle = {\n//             color: \"black\",\n//             border: \"2px white solid\",\n//             borderRadius: \"10px\",\n//             background: \"#ffffff80\",\n//             fontFamily: \"'Anton', sans-serif\",\n//             width: \"50%\",\n//             margin: \"0 auto\",\n//             display: \"block\",\n//             padding: \"10px\"\n//         }\n//         const titleStyle = {\n//             fontSize: \"1.2rem\",\n//             borderBottom: \"1px black solid\",\n//             width: \"70%\",\n//             marginBottom: \"10px\"\n//         }\n//         const imageStyle = {\n//             width: \"300px\",\n//             border: \"2px white solid\",\n//             display: \"inline\"\n//         }\n//         const textStyle = {\n//             display: \"inline\"\n//         }\n//         return (\n//             <div>\n//                 <Nav />\n//                 <div style={divStyle}>\n//                     <div style={titleStyle}>\n//                         Contact\n//                     </div>\n//                     <div>\n//                         <div style={textStyle}>\n//                             <p>I am a front-end web developer with a strong understanding of back-end frameworks. My background in graphic design, photography, and music allow me to find creative solutions to any problem. With a strong passion for website design, I bring a strong work ethic and a desire to better myself by fulfilling whatever role necessary to the best of my ability.</p>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\nvar STATES = ['AL', 'AK', 'AS', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY'];\nvar Example = React.createClass({\n  displayName: \"Example\",\n  getInitialState: function getInitialState() {\n    return {\n      email: true,\n      question: true,\n      submitted: null\n    };\n  },\n  render: function render() {\n    var submitted;\n\n    if (this.state.submitted !== null) {\n      submitted = React.createElement(\"div\", {\n        className: \"alert alert-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"ContactForm data:\"), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, JSON.stringify(this.state.submitted, null, '  '))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel panel-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"panel-title pull-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Contact Form\"), React.createElement(\"div\", {\n      className: \"pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"checkbox-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.email,\n      onChange: this.handleChange.bind(this, 'email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \" Email\"), React.createElement(\"label\", {\n      className: \"checkbox-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.question,\n      onChange: this.handleChange.bind(this, 'question'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), \" Question\"))), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(ContactForm, {\n      ref: \"contactForm\",\n      email: this.state.email,\n      question: this.state.question,\n      company: this.props.company,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"panel-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-block\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Submit\"))), submitted);\n  },\n  handleChange: function handleChange(field, e) {\n    var nextState = {};\n    nextState[field] = e.target.checked;\n    this.setState(nextState);\n  },\n  handleSubmit: function handleSubmit() {\n    if (this.refs.contactForm.isValid()) {\n      this.setState({\n        submitted: this.refs.contactForm.getFormData()\n      });\n    }\n  }\n});\n/**\n * A contact form with certain optional fields.\n */\n\nvar ContactForm = React.createClass({\n  displayName: \"ContactForm\",\n  getDefaultProps: function getDefaultProps() {\n    return {\n      email: true,\n      question: false\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      errors: {}\n    };\n  },\n  isValid: function isValid() {\n    var fields = ['firstName', 'lastName', 'phoneNumber', 'address', 'city', 'state', 'zipCode'];\n    if (this.props.email) fields.push('email');\n    if (this.props.question) fields.push('question');\n    var errors = {};\n    fields.forEach(function (field) {\n      var value = trim(this.refs[field].getDOMNode().value);\n\n      if (!value) {\n        errors[field] = 'This field is required';\n      }\n    }.bind(this));\n    this.setState({\n      errors: errors\n    });\n    var isValid = true;\n\n    for (var error in errors) {\n      isValid = false;\n      break;\n    }\n\n    return isValid;\n  },\n  getFormData: function getFormData() {\n    var data = {\n      firstName: this.refs.firstName.getDOMNode().value,\n      lastName: this.refs.lastName.getDOMNode().value,\n      phoneNumber: this.refs.phoneNumber.getDOMNode().value,\n      address: this.refs.address.getDOMNode().value,\n      city: this.refs.city.getDOMNode().value,\n      state: this.refs.state.getDOMNode().value,\n      zipCode: this.refs.zipCode.getDOMNode().value,\n      currentCustomer: this.refs.currentCustomerYes.getDOMNode().checked\n    };\n    if (this.props.email) data.email = this.refs.email.getDOMNode().value;\n    if (this.props.question) data.question = this.refs.question.getDOMNode().value;\n    return data;\n  },\n  render: function render() {\n    return React.createElement(\"div\", {\n      className: \"form-horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, this.renderTextInput('firstName', 'First Name'), this.renderTextInput('lastName', 'Last Name'), this.renderTextInput('phoneNumber', 'Phone number'), this.props.email && this.renderTextInput('email', 'Email'), this.props.question && this.renderTextarea('question', 'Question'), this.renderTextInput('address', 'Address'), this.renderTextInput('city', 'City'), this.renderSelect('state', 'State', STATES), this.renderTextInput('zipCode', 'Zip Code'), this.renderRadioInlines('currentCustomer', 'Are you currently a ' + this.props.company + ' Customer?', {\n      values: ['Yes', 'No'],\n      defaultCheckedValue: 'No'\n    }));\n  },\n  renderTextInput: function renderTextInput(id, label) {\n    return this.renderField(id, label, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: id,\n      ref: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }));\n  },\n  renderTextarea: function renderTextarea(id, label) {\n    return this.renderField(id, label, React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: id,\n      ref: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }));\n  },\n  renderSelect: function renderSelect(id, label, values) {\n    var options = values.map(function (value) {\n      return React.createElement(\"option\", {\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, value);\n    });\n    return this.renderField(id, label, React.createElement(\"select\", {\n      className: \"form-control\",\n      id: id,\n      ref: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, options));\n  },\n  renderRadioInlines: function renderRadioInlines(id, label, kwargs) {\n    var radios = kwargs.values.map(function (value) {\n      var defaultChecked = value == kwargs.defaultCheckedValue;\n      return React.createElement(\"label\", {\n        className: \"radio-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        ref: id + value,\n        name: id,\n        value: value,\n        defaultChecked: defaultChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), value);\n    });\n    return this.renderField(id, label, radios);\n  },\n  renderField: function renderField(id, label, field) {\n    return React.createElement(\"div\", {\n      className: $c('form-group', {\n        'has-error': id in this.state.errors\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: id,\n      className: \"col-sm-4 control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, label), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, field));\n  }\n});\nReact.renderComponent(React.createElement(Example, {\n  company: \"FakeCo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 240\n  },\n  __self: this\n}), document.getElementById('contactform')); // Utils\n\nvar trim = function () {\n  var TRIM_RE = /^\\s+|\\s+$/g;\n  return function trim(string) {\n    return string.replace(TRIM_RE, '');\n  };\n}();\n\nfunction $c(staticClassName, conditionalClassNames) {\n  var classNames = [];\n\n  if (typeof conditionalClassNames == 'undefined') {\n    conditionalClassNames = staticClassName;\n  } else {\n    classNames.push(staticClassName);\n  }\n\n  for (var className in conditionalClassNames) {\n    if (!!conditionalClassNames[className]) {\n      classNames.push(className);\n    }\n  }\n\n  return classNames.join(' ');\n}\n\nexport default Contact;","map":{"version":3,"sources":["/Users/trevorcollins/Desktop/react-portfolio/src/components/Contact/index.js"],"names":["React","Component","Nav","STATES","Example","createClass","getInitialState","email","question","submitted","render","state","JSON","stringify","handleChange","bind","props","company","handleSubmit","field","e","nextState","target","checked","setState","refs","contactForm","isValid","getFormData","ContactForm","getDefaultProps","errors","fields","push","forEach","value","trim","getDOMNode","error","data","firstName","lastName","phoneNumber","address","city","zipCode","currentCustomer","currentCustomerYes","renderTextInput","renderTextarea","renderSelect","renderRadioInlines","values","defaultCheckedValue","id","label","renderField","options","map","kwargs","radios","defaultChecked","$c","renderComponent","document","getElementById","TRIM_RE","string","replace","staticClassName","conditionalClassNames","classNames","className","join","Contact"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Nav from \"../Nav\";\n\n// class Contact extends Component {\n//     render() {\n//         const divStyle = {\n//             color: \"black\",\n//             border: \"2px white solid\",\n//             borderRadius: \"10px\",\n//             background: \"#ffffff80\",\n//             fontFamily: \"'Anton', sans-serif\",\n//             width: \"50%\",\n//             margin: \"0 auto\",\n//             display: \"block\",\n//             padding: \"10px\"\n//         }\n\n//         const titleStyle = {\n//             fontSize: \"1.2rem\",\n//             borderBottom: \"1px black solid\",\n//             width: \"70%\",\n//             marginBottom: \"10px\"\n//         }\n\n//         const imageStyle = {\n//             width: \"300px\",\n//             border: \"2px white solid\",\n//             display: \"inline\"\n//         }\n\n//         const textStyle = {\n//             display: \"inline\"\n//         }\n\n//         return (\n//             <div>\n//                 <Nav />\n//                 <div style={divStyle}>\n//                     <div style={titleStyle}>\n//                         Contact\n//                     </div>\n//                     <div>\n//                         <div style={textStyle}>\n//                             <p>I am a front-end web developer with a strong understanding of back-end frameworks. My background in graphic design, photography, and music allow me to find creative solutions to any problem. With a strong passion for website design, I bring a strong work ethic and a desire to better myself by fulfilling whatever role necessary to the best of my ability.</p>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\nvar STATES = [\n    'AL', 'AK', 'AS', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL', 'GA', 'HI',\n    'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS',\n    'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR',\n    'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY'\n  ]\n  \n  var Example = React.createClass({\n    getInitialState: function() {\n      return {\n        email: true\n      , question: true\n      , submitted: null\n      }\n    }\n  \n  , render: function() {\n      var submitted\n      if (this.state.submitted !== null) {\n        submitted = <div className=\"alert alert-success\">\n          <p>ContactForm data:</p>\n          <pre><code>{JSON.stringify(this.state.submitted, null, '  ')}</code></pre>\n        </div>\n      }\n  \n      return <div>\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading clearfix\">\n            <h3 className=\"panel-title pull-left\">Contact Form</h3>\n            <div className=\"pull-right\">\n              <label className=\"checkbox-inline\">\n                <input type=\"checkbox\"\n                  checked={this.state.email}\n                  onChange={this.handleChange.bind(this, 'email')}\n                /> Email\n              </label>\n              <label className=\"checkbox-inline\">\n                <input type=\"checkbox\"\n                  checked={this.state.question}\n                  onChange={this.handleChange.bind(this, 'question')}\n                /> Question\n              </label>\n            </div>\n          </div>\n          <div className=\"panel-body\">\n            <ContactForm ref=\"contactForm\"\n              email={this.state.email}\n              question={this.state.question}\n              company={this.props.company}\n            />\n          </div>\n          <div className=\"panel-footer\">\n            <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={this.handleSubmit}>Submit</button>\n          </div>\n        </div>\n        {submitted}\n      </div>\n    }\n  \n  , handleChange: function(field, e) {\n      var nextState = {}\n      nextState[field] = e.target.checked\n      this.setState(nextState)\n    }\n  \n  , handleSubmit: function() {\n      if (this.refs.contactForm.isValid()) {\n        this.setState({submitted: this.refs.contactForm.getFormData()})\n      }\n    }\n  })\n  \n  /**\n   * A contact form with certain optional fields.\n   */\n  var ContactForm = React.createClass({\n    getDefaultProps: function() {\n      return {\n        email: true\n      , question: false\n      }\n    }\n  \n  , getInitialState: function() {\n      return {errors: {}}\n    }\n  \n  , isValid: function() {\n      var fields = ['firstName', 'lastName', 'phoneNumber', 'address', 'city', 'state', 'zipCode']\n      if (this.props.email) fields.push('email')\n      if (this.props.question) fields.push('question')\n  \n      var errors = {}\n      fields.forEach(function(field) {\n        var value = trim(this.refs[field].getDOMNode().value)\n        if (!value) {\n          errors[field] = 'This field is required'\n        }\n      }.bind(this))\n      this.setState({errors: errors})\n  \n      var isValid = true\n      for (var error in errors) {\n        isValid = false\n        break\n      }\n      return isValid\n    }\n  \n  , getFormData: function() {\n      var data = {\n        firstName: this.refs.firstName.getDOMNode().value\n      , lastName: this.refs.lastName.getDOMNode().value\n      , phoneNumber: this.refs.phoneNumber.getDOMNode().value\n      , address: this.refs.address.getDOMNode().value\n      , city: this.refs.city.getDOMNode().value\n      , state: this.refs.state.getDOMNode().value\n      , zipCode: this.refs.zipCode.getDOMNode().value\n      , currentCustomer: this.refs.currentCustomerYes.getDOMNode().checked\n      }\n      if (this.props.email) data.email = this.refs.email.getDOMNode().value\n      if (this.props.question) data.question = this.refs.question.getDOMNode().value\n      return data\n    }\n  \n  , render: function() {\n      return <div className=\"form-horizontal\">\n        {this.renderTextInput('firstName', 'First Name')}\n        {this.renderTextInput('lastName', 'Last Name')}\n        {this.renderTextInput('phoneNumber', 'Phone number')}\n        {this.props.email && this.renderTextInput('email', 'Email')}\n        {this.props.question && this.renderTextarea('question', 'Question')}\n        {this.renderTextInput('address', 'Address')}\n        {this.renderTextInput('city', 'City')}\n        {this.renderSelect('state', 'State', STATES)}\n        {this.renderTextInput('zipCode', 'Zip Code')}\n        {this.renderRadioInlines('currentCustomer', 'Are you currently a ' + this.props.company + ' Customer?', {\n          values: ['Yes', 'No']\n        , defaultCheckedValue: 'No'\n        })}\n      </div>\n    }\n  \n  , renderTextInput: function(id, label) {\n      return this.renderField(id, label,\n        <input type=\"text\" className=\"form-control\" id={id} ref={id}/>\n      )\n    }\n  \n  , renderTextarea: function(id, label) {\n      return this.renderField(id, label,\n        <textarea className=\"form-control\" id={id} ref={id}/>\n      )\n    }\n  \n  , renderSelect: function(id, label, values) {\n      var options = values.map(function(value) {\n        return <option value={value}>{value}</option>\n      })\n      return this.renderField(id, label,\n        <select className=\"form-control\" id={id} ref={id}>\n          {options}\n        </select>\n      )\n    }\n  \n  , renderRadioInlines: function(id, label, kwargs) {\n      var radios = kwargs.values.map(function(value) {\n        var defaultChecked = (value == kwargs.defaultCheckedValue)\n        return <label className=\"radio-inline\">\n          <input type=\"radio\" ref={id + value} name={id} value={value} defaultChecked={defaultChecked}/>\n          {value}\n        </label>\n      })\n      return this.renderField(id, label, radios)\n    }\n  \n  , renderField: function(id, label, field) {\n      return <div className={$c('form-group', {'has-error': id in this.state.errors})}>\n        <label htmlFor={id} className=\"col-sm-4 control-label\">{label}</label>\n        <div className=\"col-sm-6\">\n          {field}\n        </div>\n      </div>\n    }\n  })\n  \n  React.renderComponent(<Example company=\"FakeCo\"/>, document.getElementById('contactform'))\n  \n  // Utils\n  \n  var trim = function() {\n    var TRIM_RE = /^\\s+|\\s+$/g\n    return function trim(string) {\n      return string.replace(TRIM_RE, '')\n    }\n  }()\n  \n  function $c(staticClassName, conditionalClassNames) {\n    var classNames = []\n    if (typeof conditionalClassNames == 'undefined') {\n      conditionalClassNames = staticClassName\n    }\n    else {\n      classNames.push(staticClassName)\n    }\n    for (var className in conditionalClassNames) {\n      if (!!conditionalClassNames[className]) {\n        classNames.push(className)\n      }\n    }\n    return classNames.join(' ')\n  }\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}