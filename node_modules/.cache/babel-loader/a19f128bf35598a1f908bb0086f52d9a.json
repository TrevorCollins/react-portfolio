{"ast":null,"code":"import React, { Component } from \"react\";\nimport Nav from \"../Nav\"; // class Contact extends Component {\n//     render() {\n//         const divStyle = {\n//             color: \"black\",\n//             border: \"2px white solid\",\n//             borderRadius: \"10px\",\n//             background: \"#ffffff80\",\n//             fontFamily: \"'Anton', sans-serif\",\n//             width: \"50%\",\n//             margin: \"0 auto\",\n//             display: \"block\",\n//             padding: \"10px\"\n//         }\n//         const titleStyle = {\n//             fontSize: \"1.2rem\",\n//             borderBottom: \"1px black solid\",\n//             width: \"70%\",\n//             marginBottom: \"10px\"\n//         }\n//         const imageStyle = {\n//             width: \"300px\",\n//             border: \"2px white solid\",\n//             display: \"inline\"\n//         }\n//         const textStyle = {\n//             display: \"inline\"\n//         }\n//         return (\n//             <div>\n//                 <Nav />\n//                 <div style={divStyle}>\n//                     <div style={titleStyle}>\n//                         Contact\n//                     </div>\n//                     <div>\n//                         <div style={textStyle}>\n//                             <p>I am a front-end web developer with a strong understanding of back-end frameworks. My background in graphic design, photography, and music allow me to find creative solutions to any problem. With a strong passion for website design, I bring a strong work ethic and a desire to better myself by fulfilling whatever role necessary to the best of my ability.</p>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\nexport default Contact;\nvar Contact = React.createClass({\n  displayName: \"Contact\",\n  propTypes: {\n    value: React.PropTypes.object.isRequired,\n    onChange: React.PropTypes.func.isRequired,\n    onSubmit: React.PropTypes.func.isRequired\n  },\n  onNameChange: function onNameChange(e) {\n    this.props.onChange(Object.assign({}, this.props.value, {\n      name: e.target.value\n    }));\n  },\n  onEmailChange: function onEmailChange(e) {\n    this.props.onChange(Object.assign({}, this.props.value, {\n      email: e.target.value\n    }));\n  },\n  onDescriptionChange: function onDescriptionChange(e) {\n    this.props.onChange(Object.assign({}, this.props.value, {\n      description: e.target.value\n    }));\n  },\n  onSubmit: function onSubmit(e) {\n    e.preventDefault();\n    this.props.onSubmit();\n  },\n  render: function render() {\n    var errors = this.props.value.errors || {};\n    return React.createElement('form', {\n      onSubmit: this.onSubmit,\n      className: 'ContactForm',\n      noValidate: true\n    }, React.createElement('input', {\n      type: 'text',\n      className: errors.name && 'ContactForm-error',\n      placeholder: 'Name (required)',\n      value: this.props.value.name,\n      onChange: this.onNameChange\n    }), React.createElement('input', {\n      type: 'email',\n      className: errors.email && 'ContactForm-error',\n      placeholder: 'Email (required)',\n      value: this.props.value.email,\n      onChange: this.onEmailChange\n    }), React.createElement('textarea', {\n      placeholder: 'Description',\n      value: this.props.value.description,\n      onChange: this.onDescriptionChange\n    }), React.createElement('button', {\n      type: 'submit',\n      className: \"btn btn-info\"\n    }, \"Add Contact\"));\n  }\n});\nvar ContactItem = React.createClass({\n  displayName: \"ContactItem\",\n  propTypes: {\n    name: React.PropTypes.string.isRequired,\n    email: React.PropTypes.string.isRequired,\n    description: React.PropTypes.string\n  },\n  render: function render() {\n    return React.createElement('li', {\n      className: 'ContactItem'\n    }, React.createElement('h2', {\n      className: 'ContactItem-name'\n    }, this.props.name), React.createElement('a', {\n      className: 'ContactItem-email',\n      href: 'mailto:' + this.props.email\n    }, this.props.email), React.createElement('div', {\n      className: 'ContactItem-description'\n    }, this.props.description));\n  }\n});\nvar ContactView = React.createClass({\n  displayName: \"ContactView\",\n  propTypes: {\n    contacts: React.PropTypes.array.isRequired,\n    newContact: React.PropTypes.object.isRequired,\n    onNewContactChange: React.PropTypes.func.isRequired,\n    onNewContactSubmit: React.PropTypes.func.isRequired\n  },\n  render: function render() {\n    var contactItemElements = this.props.contacts.filter(function (contact) {\n      return contact.email;\n    }).map(function (contact) {\n      return React.createElement(ContactItem, contact);\n    });\n    return React.createElement('div', {\n      className: 'ContactView'\n    }, React.createElement('h1', {\n      className: 'ContactView-title'\n    }, \"Contacts\"), React.createElement('ul', {\n      className: 'ContactView-list'\n    }, contactItemElements), React.createElement(ContactForm, {\n      value: this.props.newContact,\n      onChange: this.props.onNewContactChange,\n      onSubmit: this.props.onNewContactSubmit\n    }));\n  }\n});\n/*\n * Constants\n */\n\nvar CONTACT_TEMPLATE = {\n  name: \"\",\n  email: \"\",\n  description: \"\",\n  errors: null\n};\n/*\n * Actions\n */\n\nfunction updateNewContact(contact) {\n  setState({\n    newContact: contact\n  });\n}\n\nfunction submitNewContact() {\n  var contact = Object.assign({}, state.newContact, {\n    key: state.contacts.length + 1,\n    errors: {}\n  });\n\n  if (!contact.name) {\n    contact.errors.name = [\"Please enter your new contact's name\"];\n  }\n\n  if (!/.+@.+\\..+/.test(contact.email)) {\n    contact.errors.email = [\"Please enter your new contact's email\"];\n  }\n\n  setState(Object.keys(contact.errors).length === 0 ? {\n    newContact: Object.assign({}, CONTACT_TEMPLATE),\n    contacts: state.contacts.slice(0).concat(contact)\n  } : {\n    newContact: contact\n  });\n}\n/*\n * Model\n */\n// The app's complete current state\n\n\nvar state = {}; // Make the given changes to the state and perform any required housekeeping\n\nfunction setState(changes) {\n  Object.assign(state, changes);\n  ReactDOM.render(React.createElement(ContactView, Object.assign({}, state, {\n    onNewContactChange: updateNewContact,\n    onNewContactSubmit: submitNewContact\n  })), document.getElementById('react-app'));\n} // Set initial data\n\n\nsetState({\n  contacts: [{\n    key: 1,\n    name: \"James K Nelson\",\n    email: \"james@jamesknelson.com\",\n    description: \"Front-end Unicorn\"\n  }, {\n    key: 2,\n    name: \"Jim\",\n    email: \"jim@example.com\"\n  }],\n  newContact: Object.assign({}, CONTACT_TEMPLATE)\n});","map":{"version":3,"sources":["/Users/trevorcollins/Desktop/react-portfolio/src/components/Contact/index.js"],"names":["React","Component","Nav","Contact","createClass","propTypes","value","PropTypes","object","isRequired","onChange","func","onSubmit","onNameChange","e","props","Object","assign","name","target","onEmailChange","email","onDescriptionChange","description","preventDefault","render","errors","createElement","className","noValidate","type","placeholder","ContactItem","string","href","ContactView","contacts","array","newContact","onNewContactChange","onNewContactSubmit","contactItemElements","filter","contact","map","ContactForm","CONTACT_TEMPLATE","updateNewContact","setState","submitNewContact","state","key","length","test","keys","slice","concat","changes","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Nav from \"../Nav\";\n\n// class Contact extends Component {\n//     render() {\n//         const divStyle = {\n//             color: \"black\",\n//             border: \"2px white solid\",\n//             borderRadius: \"10px\",\n//             background: \"#ffffff80\",\n//             fontFamily: \"'Anton', sans-serif\",\n//             width: \"50%\",\n//             margin: \"0 auto\",\n//             display: \"block\",\n//             padding: \"10px\"\n//         }\n\n//         const titleStyle = {\n//             fontSize: \"1.2rem\",\n//             borderBottom: \"1px black solid\",\n//             width: \"70%\",\n//             marginBottom: \"10px\"\n//         }\n\n//         const imageStyle = {\n//             width: \"300px\",\n//             border: \"2px white solid\",\n//             display: \"inline\"\n//         }\n\n//         const textStyle = {\n//             display: \"inline\"\n//         }\n\n//         return (\n//             <div>\n//                 <Nav />\n//                 <div style={divStyle}>\n//                     <div style={titleStyle}>\n//                         Contact\n//                     </div>\n//                     <div>\n//                         <div style={textStyle}>\n//                             <p>I am a front-end web developer with a strong understanding of back-end frameworks. My background in graphic design, photography, and music allow me to find creative solutions to any problem. With a strong passion for website design, I bring a strong work ethic and a desire to better myself by fulfilling whatever role necessary to the best of my ability.</p>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\nexport default Contact;\n\nvar Contact = React.createClass({\n    propTypes: {\n      value: React.PropTypes.object.isRequired,\n      onChange: React.PropTypes.func.isRequired,\n      onSubmit: React.PropTypes.func.isRequired\n    },\n    \n    onNameChange: function(e) {\n      this.props.onChange(Object.assign({}, this.props.value, {name: e.target.value}));\n    },\n    \n    onEmailChange: function(e) {\n      this.props.onChange(Object.assign({}, this.props.value, {email: e.target.value}));\n    },\n    \n    onDescriptionChange: function(e) {\n      this.props.onChange(Object.assign({}, this.props.value, {description: e.target.value}));\n    },\n  \n    onSubmit: function(e) {\n      e.preventDefault();\n      this.props.onSubmit();\n    },\n  \n    render: function() {\n      var errors = this.props.value.errors || {};\n  \n      return (\n        React.createElement('form', {onSubmit: this.onSubmit, className: 'ContactForm', noValidate: true},\n          React.createElement('input', {\n            type: 'text',\n            className: errors.name && 'ContactForm-error',\n            placeholder: 'Name (required)',\n            value: this.props.value.name,\n            onChange: this.onNameChange,\n          }),\n          React.createElement('input', {\n            type: 'email',\n            className: errors.email && 'ContactForm-error',\n            placeholder: 'Email (required)',\n            value: this.props.value.email,\n            onChange: this.onEmailChange,\n          }),\n          React.createElement('textarea', {\n            placeholder: 'Description',\n            value: this.props.value.description,\n            onChange: this.onDescriptionChange,\n          }),\n          React.createElement('button', {type: 'submit', className: \"btn btn-info\"}, \"Add Contact\")\n        )\n      );\n    },\n  });\n  \n  \n  var ContactItem = React.createClass({\n    propTypes: {\n      name: React.PropTypes.string.isRequired,\n      email: React.PropTypes.string.isRequired,\n      description: React.PropTypes.string,\n    },\n  \n    render: function() {\n      return (\n        React.createElement('li', {className: 'ContactItem'},\n          React.createElement('h2', {className: 'ContactItem-name'}, this.props.name),\n          React.createElement('a', {className: 'ContactItem-email', href: 'mailto:'+this.props.email}, this.props.email),\n          React.createElement('div', {className: 'ContactItem-description'}, this.props.description)\n        )\n      );\n    },\n  });\n  \n  \n  var ContactView = React.createClass({\n    propTypes: {\n      contacts: React.PropTypes.array.isRequired,\n      newContact: React.PropTypes.object.isRequired,\n      onNewContactChange: React.PropTypes.func.isRequired,\n      onNewContactSubmit: React.PropTypes.func.isRequired,\n    },\n  \n    render: function() {\n      var contactItemElements = this.props.contacts\n        .filter(function(contact) { return contact.email; })\n        .map(function(contact) { return React.createElement(ContactItem, contact); });\n  \n      return (\n        React.createElement('div', {className: 'ContactView'},\n          React.createElement('h1', {className: 'ContactView-title'}, \"Contacts\"),\n          React.createElement('ul', {className: 'ContactView-list'}, contactItemElements),\n          React.createElement(ContactForm, {\n            value: this.props.newContact,\n            onChange: this.props.onNewContactChange,\n            onSubmit: this.props.onNewContactSubmit,\n          })\n        )\n      );\n    },\n  });\n  \n  \n  /*\n   * Constants\n   */\n  \n  \n  var CONTACT_TEMPLATE = {name: \"\", email: \"\", description: \"\", errors: null};\n  \n  \n  \n  /*\n   * Actions\n   */\n  \n  \n  function updateNewContact(contact) {\n    setState({ newContact: contact });\n  }\n  \n  \n  function submitNewContact() {\n    var contact = Object.assign({}, state.newContact, {key: state.contacts.length + 1, errors: {}});\n    \n    if (!contact.name) {\n      contact.errors.name = [\"Please enter your new contact's name\"];\n    }\n    if (!/.+@.+\\..+/.test(contact.email)) {\n      contact.errors.email = [\"Please enter your new contact's email\"];\n    }\n  \n    setState(\n      Object.keys(contact.errors).length === 0 ? {\n          newContact: Object.assign({}, CONTACT_TEMPLATE),\n          contacts: state.contacts.slice(0).concat(contact),\n        }\n      : { newContact: contact }\n    );\n  }\n  \n  \n  /*\n   * Model\n   */\n  \n  \n  // The app's complete current state\n  var state = {};\n  \n  // Make the given changes to the state and perform any required housekeeping\n  function setState(changes) {\n    Object.assign(state, changes);\n    \n    ReactDOM.render(\n      React.createElement(ContactView, Object.assign({}, state, {\n        onNewContactChange: updateNewContact,\n        onNewContactSubmit: submitNewContact,\n      })),\n      document.getElementById('react-app')\n    );\n  }\n  \n  // Set initial data\n  setState({\n    contacts: [\n      {key: 1, name: \"James K Nelson\", email: \"james@jamesknelson.com\", description: \"Front-end Unicorn\"},\n      {key: 2, name: \"Jim\", email: \"jim@example.com\"},\n    ],\n    newContact: Object.assign({}, CONTACT_TEMPLATE),\n  });\n  "]},"metadata":{},"sourceType":"module"}